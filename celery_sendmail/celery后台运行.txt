pip install celery
pip install supervisor
echo_supervisord_conf > /etc/supervisord.conf

如果在执行echo_supervisord_conf > /etc/supervisord.conf时报pkg_resources.DistributionNotFound: meld3>=0.6.5错误的话，找到supervisor-3.1.3-py2.6.egg-info/requires.txt，把文件里面meld3 >= 0.6.5注释掉，然后再执行echo_supervisord_conf > /etc/supervisord.conf就好了
 
查找方法：
find / | grep requires.txt

配置启动文件：

vim /etc/supervisord.conf
 
在配置后面添加以下参数
[program:celery]
command=/usr/bin/celery worker -A tasks         ##沙盒环境记得celery路径， -A tasks 就是文件路径
directory=/data/www
stdout_logfile=/data/logs/celery.log
autostart=true
autorestart=true
redirect_stderr=true
stopsignal=QUIT

注释
;program:celery 要管理的进程名，你自己随便定义，我这定义了叫celery
;command  是启动celery的命令
;directory  是程序目录 ，因为我要启动celery，需要进入/data/www目录中才能生效的，所以这里在启动命令时，会切换到这个目录里
;autorstart  自动重启celery
;stdout_logfile  存放celery的日志路径
 
以上命令的大概意思就是：
进行到/data/www目录，然后执行/usr/bin/celery worker -A tasks，并把输出的日志保存到/data/logs/celery.log中，这是指定了worker模式，如果不指定，默认为prefork模式，一般你机器有几核，系统就开启几个worker进程，如果有异常，记得查看日志/data/logs/celery.log



1、启动supervisord
/usr/bin/supervisord

查看是否启动成功
[root@drfdai www]# ps -ef |grep supervisor
root     28656     1  0 04:52 ?        00:00:00 /usr/bin/python /usr/bin/supervisord
root     28692  1542  0 04:53 pts/0    00:00:00 grep supervisor

启动celery：
supervisorctl start celery



celery 启动报错：

[root@devops-ruifengyun ~ ]$ celery -A tasks worker --loglevel=debug
Running a worker with superuser privileges when the
worker accepts messages serialized with pickle is a very bad idea!
 
If you really want to continue then you have to set the C_FORCE_ROOT
environment variable (but please think about this before you do).
 
User information: uid=0 euid=0 gid=0 egid=0
 
在配置文件加上：
from celery import Celery,platforms

celery = Celery('tasks', broker='redis://localhost:6379/0')
platforms.C_FORCE_ROOT = True 



做一个发送邮件的项目：

1、脚本详情
(env)[root@controller cele]# cat tasks.py

import time
from celery import Celery,platforms

celery = Celery('tasks', broker='redis://localhost:6379/0')
import requests,json
import smtplib
from email.mime.text import MIMEText
import sys
 
mail_host = 'smtp.163.com'
mail_user = '18878774260@163.com'
mail_pass = 'LUOhui123456'
mail_postfix = '163.com'
platforms.C_FORCE_ROOT = True 


@celery.task
def sendmail():
    me = mail_user+"<"+mail_user+"@"+mail_postfix+">"
    msg = MIMEText('content')
    msg['Subject'] = 'test'
    msg['From'] = me
    msg['to'] = '18878774260@163.com'
 
    try:
        s = smtplib.SMTP()
        s.connect(mail_host)
        s.login(mail_user,mail_pass)
        s.sendmail(me,'18878774260@163.com',msg.as_string())
        s.close()
        return True
    except Exception,e:
        print str(e)
        return False 

脚本：

后台进程：
[program:celery]
command=/devops/env/bin/celery worker -A tasks
directory=/python/cele                                   #######tasks所在目录
stdout_logfile=/var/log/celery.log
autostart=true
autorestart=true
redirect_stderr=true
stopsignal=QUIT

1、启动后台环境：
(env)[root@controller cele]# /devops/env/bin/supervisord 

2、启动celery：
(env)[root@controller cele]# supervisorctl start celery

3、查看进程：
root     24107 24106  0 15:07 ?        00:00:00 /devops/env/bin/python /devops/env/bin/celery worker -A tasks

4、启动脚本执行程序：

>>> from tasks import sendmail
>>> sendmail.delay()
<AsyncResult: 19feea2e-887b-4778-be48-8674cee0b568>